{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/covid_image1.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","Grid","container","spacing","justify","item","component","Card","xs","md","className","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NC4CpJC,EAtCD,SAAC,GAA+D,IAAD,IAA3DC,KAAQC,EAAmD,EAAnDA,UAAWC,EAAwC,EAAxCA,UAAYC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,WACtD,OAAIH,EAKP,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAChC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAGC,IAAOC,KAAMD,IAAOE,WAC7E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAE3F,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,uCAGJ,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAGC,IAAOC,KAAMD,IAAOd,YAE7E,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAC3F,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGJ,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAGC,IAAOC,KAAMD,IAAOb,SAE7E,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OACxF,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0CA7BM,c,yBCLDQ,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAHM,iCAKNF,IACFE,EAAe,4CAA8C,CAACF,IAJzC,kBAOgDG,IAAMC,IAAIF,GAP1D,2BAOZlC,KAAOC,EAPK,EAOLA,UAAWC,EAPN,EAOMA,UAAWC,EAPjB,EAOiBA,OAAQC,EAPzB,EAOyBA,WAPzB,kBASV,CAACH,YAAWC,YAAWC,SAAQC,eATrB,kCAYzBiC,QAAQC,IAAR,MAZyB,0DAAH,sDAgBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEPE,IAAMC,IAAI,wCAFH,uBAErBpC,EAFqB,EAErBA,KAEDwC,EAAexC,EAAKyC,KAAI,SAACC,GAAD,MAAgB,CAC9CzC,UAAWyC,EAAUzC,UAAU0C,MAC/BxC,OAAQuC,EAAUvC,OAAOwC,MACzBC,KAAMF,EAAUG,eAPY,kBAUrBL,GAVqB,gCAY9BH,QAAQC,IAAR,MAZ8B,yDAAH,qDAgBdQ,EAAc,uCAAG,8BAAAb,EAAA,+EAEQE,IAAMC,IAAI,4CAFlB,uBAEZW,EAFY,EAEnB/C,KAAO+C,UAFY,kBAIvBA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAJZ,gCAO1BX,QAAQC,IAAR,MAP0B,yDAAH,qD,yBCkCZW,EAhED,SAAC,GAAuD,IAAD,IAApDjD,KAAOC,EAA6C,EAA7CA,UAAWE,EAAkC,EAAlCA,OAAQD,EAA0B,EAA1BA,UAAa8B,EAAa,EAAbA,QAAa,EAC/BkB,mBAAS,IADsB,mBAC1DR,EAD0D,KAC/CS,EAD+C,KAGjEC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAGbc,KACF,IAEH,IAAMC,EACFZ,EACE,kBAAC,IAAD,CACE1C,KAAM,CACJuD,OAAQb,EAAUD,KAAI,qBAAGG,QACzBY,SAAU,CAAC,CACTxD,KAAM0C,EAAUD,KAAI,SAACzC,GAAD,OAAUA,EAAKC,aACnCwD,MAAO,WACPC,YAAa,UACbC,MAAM,GACL,CACD3D,KAAM0C,EAAUD,KAAI,SAACzC,GAAD,OAAUA,EAAKG,UACnCsD,MAAO,SACPC,YAAa,MACbE,gBAAiB,uBACjBD,MAAM,OAKV,KAGAE,EACJ5D,EAEE,kBAAC,IAAD,CACAD,KAAM,CACNuD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACTC,MAAO,SACPG,gBAAiB,CACf,yBACA,yBACA,wBAEF5D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGlDoC,QAAS,CACPC,OAAO,CAACC,SAAS,GACjBC,MAAO,CAAED,SAAQ,EAAME,KAAM,mBAAqB,CAAClC,OAGnD,KAGV,OACE,yBAAKlB,UAAWE,IAAOV,WACnB0B,EAAU6B,EAAWP,I,mCCtCda,EArBO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EACDlB,mBAAS,IADR,mBAC1CmB,EAD0C,KACxBC,EADwB,KAW7C,OARJlB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbqC,EADa,SACaxB,IADb,6EAAH,qDAGdO,KACF,CAACiB,IAIC,kBAACC,EAAA,EAAD,CAAazD,UAAWE,IAAOwD,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOnD,SACxE,4BAAQA,MAAM,IAAd,UACC2C,EAAiB5B,KAAI,SAACT,EAAS8C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGpD,MAAOM,GAAUA,S,kCCsBpEgD,E,4MAjCbC,MAAQ,CACNjF,KAAM,GACNgC,QAAS,I,EASboC,oB,uCAAsB,WAAOpC,GAAP,eAAAC,EAAA,sEACMF,EAAUC,GADhB,OACdkD,EADc,OAGpB,EAAKC,SAAS,CAAEnF,KAAMkF,EAAalD,QAASA,IAHxB,2C,wPALMD,I,OAApBmD,E,OAEPE,KAAKD,SAAS,CAAEnF,KAAMkF,I,qIASZ,IAAD,EACqBE,KAAKH,MAAxBjF,EADF,EACEA,KAAMgC,EADR,EACQA,QACd,OACE,yBAAKlB,UAAWE,IAAOV,WACtB,yBAAKQ,UAAYE,IAAOqE,MAAQC,IAAMC,IAAcC,IAAI,aACxD,kBAAC,EAAD,CAAOxF,KAAOA,IACd,kBAAC,EAAD,CAAeoE,oBAAqBgB,KAAKhB,sBACzC,kBAAC,EAAD,CAAOpE,KAAMA,EAAMgC,QAASA,IAC5B,6CAAkB,6BAAlB,oC,GA1BWyD,IAAMC,WCJxBC,IAASC,OAET,kBAAC,EAAD,MAECC,SAASC,eAAe,U,mBCRzBjG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.3bd0be3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1TBen\",\"card\":\"Cards_card__1WbDA\",\"infected\":\"Cards_infected__1oAZ6\",\"recovered\":\"Cards_recovered__3HA43\",\"deaths\":\"Cards_deaths__1RJ4J\"};","import React from 'react';\r\nimport { Card , CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( { data: { confirmed, recovered,  deaths, lastUpdate } } ) => {\r\n   if(!confirmed) {\r\n       return 'Loading...';\r\n   }\r\n\r\n    return(\r\n<Grid container spacing={3} justify=\"center\">\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n    <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n        <Typography variant=\"body2\">Number of active casesof COVID-19</Typography>\r\n    </CardContent>\r\n    </Grid>\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\r\n    <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" /></Typography>\r\n        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n    </CardContent>\r\n    </Grid>\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n\r\n    <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" /></Typography>\r\n        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n    </CardContent>\r\n    </Grid>\r\n</Grid>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n\r\n  if (country) {\r\n    changableUrl = 'https://covid19.mathdro.id/api/countries/' + [country]\r\n  }\r\n    try{\r\n      const {data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\r\n      \r\n        return {confirmed, recovered, deaths, lastUpdate };\r\n    }\r\n    catch (error) {\r\nconsole.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\ntry {\r\n  const {data} = await axios.get('https://covid19.mathdro.id/api/daily');\r\n\r\n  const modifiedData = data.map((dailyData) => ({\r\n  confirmed: dailyData.confirmed.total,\r\n  deaths: dailyData.deaths.total,\r\n  date: dailyData.reportDate,\r\n  }));\r\n\r\n  return modifiedData;\r\n} catch(error) {\r\nconsole.log(error);\r\n}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try{\r\n    const {data: {countries}} = await axios.get('https://covid19.mathdro.id/api/countries');\r\n  \r\nreturn countries.map((country) => country.name);\r\n  }\r\n  catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data:{ confirmed, deaths, recovered }, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n         }\r\n         fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                data: dailyData.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map((data) => data.deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              },\r\n              ],\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n      const barChart = (\r\n        confirmed \r\n        ? (\r\n          <Bar\r\n          data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'people',\r\n            backgroundColor: [\r\n              'rgba(13, 13, 223, 0.5)',\r\n              'rgba(47, 185, 13, 0.5)',\r\n              'rgba(223, 8, 8, 0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value ]\r\n          }]\r\n          }}\r\n          options={{\r\n            legend:{display: false},\r\n            title: { display:true, text: 'Current state in' + [country]},\r\n          }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      { country ? barChart : lineChart }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\nconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\nuseEffect(() => {\r\n    const fetchAPI = async () => {\r\n        setFetchedCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n},[setFetchedCountries]);\r\n\r\n\r\n    return(\r\n    <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n    </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\nimport { Cards, Chart, CountryPicker} from './Components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n \n\n\nimport coronaImage from '../src/images/covid_image1.jpg';\n\nclass App extends React.Component{\n  state = {\n    data: {},\n    country: '',\n  }\n\nasync componentDidMount() {\n  const fetchedData = await fetchData();\n\n this.setState({ data: fetchedData });\n}\n\nhandleCountryChange = async (country) => {\n  const fetchedData = await fetchData(country);\n\n  this.setState({ data: fetchedData, country: country });\n}\n\n  render(){\n    const { data, country } =  this.state; \n    return(\n      <div className={styles.container}>\n       <img className={ styles.image } src={ coronaImage } alt=\"COVID-19\"/>\n       <Cards data={ data }/>\n       <CountryPicker handleCountryChange={this.handleCountryChange}/>\n       <Chart data={data} country={country}/>\n       <h3> -Taniya Rane <br/> Web Designer And Devloper </h3>\n       \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n\n<App />\n,\n document.getElementById('root')\n );\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1hxOr\",\"image\":\"App_image__2Tq1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__5CJFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__x5MMN\"};","module.exports = __webpack_public_path__ + \"static/media/covid_image1.9d33b8b3.jpg\";"],"sourceRoot":""}